version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql
    container_name: test-db
    environment:
      MYSQL_ROOT_PASSWORD: admin123
      MYSQL_DATABASE: test
    ports:
      - "3306:3306"
    # volumes:
    #   - mysql_data:/var/lib/mysql
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Service 1
  categories:
    build:
      context: ./categories
      dockerfile: Dockerfile
    container_name: c-app-categories
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT : 8003
      DB_HOST: test-db:3306
      # SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/test?useSSL=false&allowPublicKeyRetrieval=true
      # SPRING_DATASOURCE_USERNAME: app_user
      # SPRING_DATASOURCE_PASSWORD: userpassword
    ports:
      - "8082:8003"
    networks:
      - test-network
    restart: unless-stopped

  # Service 2
  products:
    build:
      context: ./products
      dockerfile: Dockerfile
    container_name: c-app-products
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT : 8003
      DB_HOST: test-db:3306
      C_APP_CATEGORIES: c-app-categories:8003

    ports:
      - "8081:8003"
    networks:
      - test-network
    restart: unless-stopped

  # API Gateway
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    depends_on:
      - products
      - categories
    ports:
      - "8080:8080"
    networks:
      - test-network
    restart: unless-stopped

  # Angular Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:80"
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - gateway
    networks:
      - test-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  test-network:
    driver: bridge